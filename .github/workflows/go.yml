# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build API
      run: go build -v -o ./api/api.exe ./api

    - name: Build Outbox
      run: go build -v -o ./outbox/outbox.exe ./outbox

    - name: Build Consumer
      run: go build -v -o ./consumer/consumer.exe ./consumer

  docker-compose:
    runs-on: ubuntu-latest
    needs: build  # Make sure 'build' job completes before starting this job
    steps:
    - name: Check Docker and docker-compose
      run: |
        docker --version
        docker-compose --version

    - name: Build and Run Docker Compose
      run: |
        cd $GITHUB_WORKSPACE
        echo ls
        docker-compose up -d

    - name: Check Container Health
      run: |
        cd $GITHUB_WORKSPACE  # Change the working directory to the root of the project
        HEALTHY_CONTAINERS=$(docker ps --format "{{.Names}} {{.Status}}" | grep "gokube-api\|gokube-outbox\|gokube-consumer" | grep "(healthy)")

        if [ -z "$HEALTHY_CONTAINERS" ]; then
          echo "Error: Some containers are not healthy."
          docker ps
          exit 1
        else
          echo "All containers are healthy."
        fi
